{"version":3,"sources":["components/SectionTitle/SectionTitle.jsx","components/Profile/Profile.styled.jsx","components/Profile/Profile.jsx","components/ProfileList/ProfileList.jsx","components/Friend/Friend.styled.jsx","components/Friend/Friend.jsx","components/FriendList/FriendList.styled.jsx","components/FriendList/FriendList.jsx","components/Transactions-history/Transactions-history.styled.jsx","components/Transactions-history/Transactions-history.jsx","components/Transactions/Transactions.jsx","components/Statistics/Statistics.styled.jsx","components/Statistics/Statistics.jsx","components/StatisticsList/StatisticsList.styled.jsx","components/StatisticsList/StatisticsList.jsx","components/App/App.jsx","index.js"],"names":["SectionTitle","text","Container","styled","div","Avatar","img","Label","span","UserName","p","StatsList","ul","StatsItem","li","Quantity","Profile","username","tag","location","avatar","stats","src","alt","followers","views","likes","ProfileList","events","map","item","propTypes","array","ItemFriend","Status","isOnline","NameFriend","Friend","id","name","ListFriends","FriendList","Body","tbody","TransactionsHistory","type","amount","currency","slice","Transactions","className","event","ItemHistory","Statistics","label","percentage","Section","section","List","StatisticsList","title","data","element","App","user","friendlyList","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dc4fe9c1.chunk.js","sourcesContent":["import propTypes from 'prop-types';\n\nexport const SectionTitle = ({ text }) => {\n  return <h1>{text}</h1>;\n};\n\nSectionTitle.propTypes = {\n  text: propTypes.string,\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\n  max-width: 320px;\n  margin: 50px auto 50px auto;\n  text-align: center;\n`;\n\nexport const Avatar = styled.img`\n  display: block;\n  padding-top: 10px;\n  width: 100%;\n  border-radius: 50% 50%;\n`;\n\nexport const Label = styled.span`\n  color: grey;\n  font-size: 18px;\n`;\n\nexport const UserName = styled.p`\n  font-size: 22px;\n  font-weight: bold;\n  color: black;\n`;\n\nexport const StatsList = styled.ul`\n  margin: 0;\n  padding: 0;\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));\n  list-style: none;\n`;\n\nexport const StatsItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  border: 1px solid grey;\n  border-bottom: none;\n  background-color: beige;\n`;\n\nexport const Quantity = styled.span`\n  color: black;\n`;\n","import propTypes from 'prop-types';\n\nimport {\n  Container,\n  Avatar,\n  UserName,\n  Label,\n  Quantity,\n  StatsList,\n  StatsItem,\n} from './Profile.styled';\n\nexport const Profile = ({ username, tag, location, avatar, stats }) => {\n  return (\n    <Container key={tag}>\n      <div>\n        <Avatar src={avatar} alt={username} />\n        <UserName>{username}</UserName>\n        <p>{tag}</p>\n        <p>{location}</p>\n      </div>\n\n      <StatsList>\n        <StatsItem>\n          <Label>Followers</Label>\n          <Quantity>{stats.followers}</Quantity>\n        </StatsItem>\n        <StatsItem>\n          <Label>Views</Label>\n          <Quantity>{stats.views}</Quantity>\n        </StatsItem>\n        <StatsItem>\n          <Label>Likes</Label>\n          <Quantity>{stats.likes}</Quantity>\n        </StatsItem>\n      </StatsList>\n    </Container>\n  );\n};\n\nProfile.propTypes = {\n  username: propTypes.string,\n  tag: propTypes.string,\n  location: propTypes.string,\n  avatar: propTypes.string,\n  stats: propTypes.object,\n};\n","import propTypes from 'prop-types';\n\nimport { Profile } from '../Profile/Profile';\n\nexport const ProfileList = ({ events }) => {\n  return events.map(item => (\n    <Profile\n      key={item.tag}\n      username={item.username}\n      tag={item.tag}\n      location={item.location}\n      avatar={item.avatar}\n      stats={item.stats}\n    ></Profile>\n  ));\n};\n\nProfile.propTypes = {\n  events: propTypes.array,\n};\n","import styled from '@emotion/styled';\n\nconst setBgColor = ({ isOnline }) => {\n  switch (isOnline) {\n    case true:\n      return 'green';\n    case false:\n      return 'red';\n    default:\n      return 'transparent';\n  }\n};\n\nexport const ItemFriend = styled.li`\n  padding: 5px;\n  display: flex;\n  align-items: center;\n\n  &:not(:last-child) {\n    margin-bottom: 15px;\n  }\n\n  &:hover,\n  &:focus {\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\n  }\n`;\n\nexport const Status = styled.span`\n  margin-right: 10px;\n  margin-left: 10px;\n  display: inline-block;\n  width: 15px;\n  height: 15px;\n  border-radius: 50% 50%;\n  border: 1px solid #000;\n\n  background-color: ${setBgColor};\n`;\nexport const Avatar = styled.img`\n  display: inline-block;\n  width: 100px;\n`;\n\nexport const NameFriend = styled.p`\n  margin-left: 20px;\n  font-size: 18px;\n`;\n","import propTypes from 'prop-types';\nimport { ItemFriend, Status, Avatar, NameFriend } from './Friend.styled';\n\nexport const Friend = ({ id, isOnline, avatar, name }) => {\n  return (\n    <ItemFriend key={id}>\n      <Status isOnline={isOnline}></Status>\n      <Avatar src={avatar} alt={name} />\n      <NameFriend>{name}</NameFriend>\n    </ItemFriend>\n  );\n};\n\nFriend.propTypes = {\n  id: propTypes.string,\n  avatar: propTypes.string,\n  name: propTypes.string,\n  isOnline: propTypes.bool,\n};\n","import styled from '@emotion/styled';\n\nexport const ListFriends = styled.ul`\n  margin: 0;\n  padding: 15px 0;\n  list-style-type: none;\n`;\n","import propTypes from 'prop-types';\n\nimport { Friend } from 'components/Friend/Friend';\nimport { ListFriends } from './FriendList.styled';\n\nexport const FriendList = ({ events }) => {\n  return (\n    <ListFriends>\n      {events.map(item => (\n        <Friend key={item.id} isOnline={item.isOnline} avatar={item.avatar} name={item.name} />\n      ))}\n    </ListFriends>\n  );\n};\n\nFriendList.propTypes = {\n  events: propTypes.array,\n};\n","import styled from '@emotion/styled';\n\nexport const Body = styled.tbody`\n  width: 50%;\n\n  &:nth-of-type(odd) {\n    background-color: #f2f2f2;\n  }\n`;\n","import propTypes from 'prop-types';\nimport { Body } from './Transactions-history.styled';\n\nexport const TransactionsHistory = ({ id, type, amount, currency }) => {\n  return (\n    <Body key={id}>\n      <tr>\n        <td>{type}</td>\n        <td>{amount}</td>\n        <td>{currency.slice(0, 3)}</td>\n      </tr>\n    </Body>\n  );\n};\n\nTransactionsHistory.propTypes = {\n  id: propTypes.string,\n  type: propTypes.string,\n  amount: propTypes.string,\n  currency: propTypes.string,\n};\n","import { TransactionsHistory } from 'components/Transactions-history/Transactions-history';\n\nexport const Transactions = ({ events }) => {\n  return (\n    <table className=\"transaction-history\">\n      <thead>\n        <tr>\n          <th>Type</th>\n          <th>Amount</th>\n          <th>Currency</th>\n        </tr>\n      </thead>\n      {events.map(event => (\n        <TransactionsHistory\n          key={event.id}\n          type={event.type}\n          amount={event.amount}\n          currency={event.currency}\n        />\n      ))}\n    </table>\n  );\n};\n","import styled from '@emotion/styled';\r\n\r\nexport const ItemHistory = styled.li`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  &:not(:last-child) {\r\n    margin-right: 10px;\r\n  }\r\n`;\r\n\r\nexport const Label = styled.span`\r\n  font-size: 18px;\r\n  font-width: 500px;\r\n`;\r\n","import propTypes from 'prop-types';\n\nimport { ItemHistory, Label } from './Statistics.styled';\n\nexport const Statistics = ({ id, label, percentage }) => {\n  return (\n    <ItemHistory key={id}>\n      <Label>{label}</Label>\n      <span>{percentage}</span>\n    </ItemHistory>\n  );\n};\n\nStatistics.propTypes = {\n  id: propTypes.string,\n  label: propTypes.string,\n  percentage: propTypes.number,\n};\n","import styled from '@emotion/styled';\r\n\r\nexport const Section = styled.section`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 250px;\r\n  border: 1px solid grey;\r\n`;\r\n\r\nexport const List = styled.ul`\r\n  margin: 0;\r\n  padding: 0 0 10px 0;\r\n  display: flex;\r\n`;\r\n","import propTypes from 'prop-types';\nimport { Statistics } from 'components/Statistics/Statistics';\nimport { List, Section } from './StatisticsList.styled';\n\nexport const StatisticsList = ({ title, data }) => {\n  return (\n    <Section>\n      {title && <h2 className=\"title\">{title}</h2>}\n\n      <List>\n        {data.map(element => (\n          <Statistics key={element.id} label={element.label} percentage={element.percentage} />\n        ))}\n      </List>\n    </Section>\n  );\n};\n\nStatisticsList.propTypes = {\n  title: propTypes.string,\n  data: propTypes.array,\n};\n","import { SectionTitle } from 'components/SectionTitle/SectionTitle.jsx';\nimport { ProfileList } from 'components/ProfileList/ProfileList';\nimport { FriendList } from 'components/FriendList/FriendList';\nimport { Transactions } from 'components/Transactions/Transactions';\nimport { StatisticsList } from 'components/StatisticsList/StatisticsList';\n\nimport user from '../../user.json';\nimport data from '../../data.json';\nimport friendlyList from '../../friends.json';\nimport transactions from '../../transactions.json';\n\nexport const App = () => {\n  return (\n    <>\n      <SectionTitle text=\"Task-1\" />\n      <ProfileList events={user} />\n      <SectionTitle text=\"Task-2\" />\n      <StatisticsList data={data} title=\"Upload stats\" />\n      <SectionTitle text=\"Task-3\" />\n      <FriendList events={friendlyList} />\n      <SectionTitle text=\"Task-4\" />\n      <Transactions events={transactions} />\n    </>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}